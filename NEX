local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/UILibrary.lua"))()
local Window = Library.CreateLib("卐 Operation Nexus Seig Heil 卍", "DarkTheme")

local ESP = Window:NewTab("ESP")
local ESPSection = ESP:NewSection("ESP")

ESPSection:NewButton("ESP", "Shows enemy player chams, health, name, and distance from you.", function()
-- Configuration
_G.TeamCheck = true
_G.Tracers = true

-- LocalPlayer and Services
local player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Highlight
local highlight = Instance.new("Highlight")
highlight.Name = "Highlight"

local redHighlightColor = Color3.new(1, 0, 0)
local greenHighlightColor = Color3.new(0, 1, 0)

-- Functions
local function createHighlight(character, highlightColor)
    if character and not character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
        local highlightClone = highlight:Clone()
        highlightClone.Adornee = character
        highlightClone.Parent = character.HumanoidRootPart
        highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlightClone.Name = "Highlight"
    end
end

local function updatePlayerLabels()
    local playerPosition = player.Character and player.Character.HumanoidRootPart.Position
    if not playerPosition then
        return
    end

    for _, otherPlayer in ipairs(game.Players:GetPlayers()) do
        if otherPlayer ~= player then
            local character, humanoid, head = otherPlayer.Character, otherPlayer.Character:FindFirstChild("Humanoid"), otherPlayer.Character:FindFirstChild("Head")
            local nameLabel = head and head:FindFirstChild("PlayerLabel")

            if humanoid and head and humanoid.Health > 0 then
                local distance = (head.Position - player.Character.Head.Position).Magnitude

                if not nameLabel then
                    nameLabel = Instance.new("BillboardGui")
                    nameLabel.Name = "PlayerLabel"
                    nameLabel.AlwaysOnTop = true
                    nameLabel.ExtentsOffset = Vector3.new(0, 3, 0)
                    nameLabel.Size = UDim2.new(0, 100, 0, 30)

                    local nameLabelText = Instance.new("TextLabel")
                    nameLabelText.Name = "NameLabel"
                    nameLabelText.BackgroundTransparency = 1
                    nameLabelText.Position = UDim2.new(0, 0, 0, 0)
                    nameLabelText.Size = UDim2.new(1, 0, 0.5, 0)
                    nameLabelText.Text = ""
                    nameLabelText.TextColor3 = Color3.new(1, 1, 1)
                    nameLabelText.Font = Enum.Font.SourceSansBold
                    nameLabelText.TextSize = 18
                    nameLabelText.Parent = nameLabel

                    local healthLabel = Instance.new("TextLabel")
                    healthLabel.Name = "HealthLabel"
                    healthLabel.BackgroundTransparency = 1
                    healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
                    healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
                    healthLabel.Text = ""
                    healthLabel.TextColor3 = Color3.new(1, 1, 1)
                    healthLabel.Font = Enum.Font.SourceSansBold
                    healthLabel.TextSize = 18
                    healthLabel.Parent = nameLabel

                    nameLabel.Parent = head
                end

                nameLabel.NameLabel.Text = otherPlayer.Name
                nameLabel.HealthLabel.Text = string.format("Distance: %.2f | Health: %d", distance, humanoid.Health)
                nameLabel.Adornee = head
                if _G.TeamCheck and player.TeamColor == otherPlayer.TeamColor then
                    createHighlight(character, greenHighlightColor)
                    nameLabel.NameLabel.TextColor3 = Color3.new(0, 1, 0)
                else
                    createHighlight(character, redHighlightColor)
                    nameLabel.NameLabel.TextColor3 = Color3.new(1, 0, 0)
                end
            elseif nameLabel then
                nameLabel:Destroy()
            end
        end
    end
end

local Tracers = {}

local function createTracer(player)
    local tracer = Drawing.new("Line")
    tracer.Visible = false
    tracer.Color = Color3.new(255, 0, 0)
    tracer.Thickness = 1
    tracer.Transparency = 1
    Tracers[player] = tracer
end

local function updateTracers()
    local lplr = game.Players.LocalPlayer
    local camera = workspace.CurrentCamera

    while wait() do
        for player, tracer in pairs(Tracers) do
            if player.Character and player.Character:FindFirstChild("Humanoid") and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.Humanoid.Health > 0 then
                local Vector, OnScreen = camera:worldToViewportPoint(player.Character.HumanoidRootPart.Position)
                
                if OnScreen then
                    tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                    tracer.To = Vector2.new(Vector.X, Vector.Y)

                    if player.TeamColor == lplr.TeamColor and _G.TeamCheck then
                        tracer.Visible = false
                    else
                        tracer.Visible = true
                    end
                else
                    tracer.Visible = false
                end
            else
                tracer.Visible = false
            end

            if not _G.Tracers then
                tracer.Visible = false
            end
        end
    end
end

game.Players.PlayerAdded:Connect(function(player)
    createTracer(player)
end)

for _, player in ipairs(game.Players:GetPlayers()) do
    createTracer(player)
end

-- Heartbeat connections
RunService.Heartbeat:Connect(updatePlayerLabels)
coroutine.wrap(updateTracers)()

end)

ESPSection:NewToggle("Toggle Tracers", "lines going to the other players", function(state)
    _G.Tracers = state
end)


ESPSection:NewButton("FullBright", "Makes Dark Bright.", function()
while wait(0.1) do
    local Lighting = game:GetService("Lighting")
      Lighting.Ambient = Color3.new(1, 1, 1)
      Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
    end
end)

local Aimbot = Window:NewTab("Aimbot")
local AimbotTogglesSection = Aimbot:NewSection("Aimbot Toggles")
local FOVTogglesSection = Aimbot:NewSection("FOV Toggles")

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Holding = false

-- Aimbot settings
AimbotEnabled = false
TeamCheck = true
local AimPart = "Head"
Sensitivity = 0

-- FOV settings
local CircleSides = 12
CircleColor = Color3.fromRGB(255, 255, 255)
local CircleTransparency = 0.7
CircleRadius = 80
local CircleFilled = false
CircleVisible = false
local CircleThickness = 3

-- Wall check toggle
WallCheckEnabled = false

-- Define bullet speeds for each gun
local BulletSpeeds = {
    M16 = 682.5,
    MP5 = 910,
    G17 = 1200,
    Deagle = 2100,
    ['870MCS'] = 1125, -- If key contains special characters or spaces, use square brackets
    AK47 = 1000,
    R870 = 1500,
    Makarov = 1200,
    ['S&W .44'] = 1200,
    Olympia = 1500,
    ASVAL = 1500,
    G36 = 6000,
    P250S = 800,
    G17X = 850,
    KS23M = 1500,
    AKS74U = 910,
    ACR = 1650,
    KAR98K = 3750,
    ['Serbu Shotgun'] = 1500,
    M14 = 1700,
    M82 = 3550
}

local FOVCircle = Drawing.new("Circle")
FOVCircle.Filled = CircleFilled
FOVCircle.Visible = CircleVisible
FOVCircle.Transparency = CircleTransparency
FOVCircle.Thickness = CircleThickness

function IsInFrontOfCamera(part)
    local cameraCFrame = Camera.CFrame
    local partPosition = part.Position
    local cameraLookVector = cameraCFrame.LookVector
    local directionToPart = (partPosition - cameraCFrame.Position).Unit
    return cameraLookVector:Dot(directionToPart) > 0
end

function GetClosestPlayer()
    local MaximumDistance = CircleRadius
    local Target = nil
    local ClosestDistance = math.huge

    local centerScreen = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

    for _, v in pairs(Players:GetPlayers()) do
        if v ~= LocalPlayer and (not TeamCheck or v.Team ~= LocalPlayer.Team) then
            local character = v.Character
            if character then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart then
                    if WallCheckEnabled then
                        local ray = Ray.new(Camera.CFrame.Position, humanoidRootPart.Position - Camera.CFrame.Position)
                        local hitPart, hitPosition = workspace:FindPartOnRay(ray)
                        if hitPart and hitPart.Parent ~= character then
                            break
                        end
                    end

                    local screenPoint = Camera:WorldToScreenPoint(humanoidRootPart.Position)
                    local vectorDistance = (centerScreen - Vector2.new(screenPoint.X, screenPoint.Y)).Magnitude

                    -- Calculate distance based on movement speed
                    local velocity = humanoidRootPart.Velocity.magnitude
                    local weightedDistance = vectorDistance + velocity * 0.1

                    if weightedDistance < MaximumDistance and weightedDistance < ClosestDistance and IsInFrontOfCamera(humanoidRootPart) then
                        ClosestDistance = weightedDistance
                        Target = v
                    end
                end
            end
        end
    end

    return Target
end

function PredictTargetPosition(targetPart, weaponName)
    local bulletSpeed = BulletSpeeds[weaponName]
    if not bulletSpeed then
        warn("Bullet speed for weapon ".. weaponName .. " not found.")
        return nil
    end

    local targetPosition = targetPart.Position
    local targetVelocity = targetPart.Velocity
    local directionToTarget = (targetPosition - Camera.CFrame.Position).Unit
    local targetDistance = (targetPosition - Camera.CFrame.Position).Magnitude
    local timeToHit = targetDistance / bulletSpeed

    -- Predict future position of the target based on its velocity
    local predictedPosition = targetPosition + targetVelocity * timeToHit

    -- Calculate look vector towards predicted position
    local lookVector = (predictedPosition - Camera.CFrame.Position).Unit

    return lookVector
end

UserInputService.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = true
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton2 then
        Holding = false
    end
end)

RunService.RenderStepped:Connect(function()
    FOVCircle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
    FOVCircle.Radius = CircleRadius
    FOVCircle.Color = CircleColor
    FOVCircle.Visible = CircleVisible
    FOVCircle.Transparency = CircleTransparency
    FOVCircle.NumSides = CircleSides
    FOVCircle.Thickness = CircleThickness

    if Holding and AimbotEnabled then
        local targetPlayer = GetClosestPlayer()
        if targetPlayer then
            local weaponName = "M16" -- Change this to the name of the weapon you are using
            local targetPart = targetPlayer.Character and targetPlayer.Character[AimPart]
            if targetPart then
                local lookVector = PredictTargetPosition(targetPart, weaponName)
                if lookVector then
                    local targetCFrame = CFrame.new(Camera.CFrame.Position, Camera.CFrame.Position + lookVector)
                    TweenService:Create(Camera, TweenInfo.new(Sensitivity, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {CFrame = targetCFrame}):Play()
                end
            end
        end
    end
end)

AimbotTogglesSection:NewToggle("Enable Aimbot", "Enables Aimbot", function(state)
    AimbotEnabled = state
end)

AimbotTogglesSection:NewToggle("Enable Team Check", "Enables Team Check", function(state)
    TeamCheck = state
end)

FOVTogglesSection:NewToggle("FOV Visible", "Changes the visibility of the FOV.", function (state)
    CircleVisible = state
end)

FOVTogglesSection:NewColorPicker("FOV Color", "Changes The FOV Color", Color3.fromRGB(0, 0, 0), function(color)
    CircleColor = color
end)

FOVTogglesSection:NewSlider("FOV Size", "Changes the size of the FOV.", 500, 0, function(s)
    CircleRadius = s
end)

FOVTogglesSection:NewSlider("Lock Speed", "The Higher The number the lower the speed", 10, 0, function(s)
    Sensitivity = s
end)

local CrossHair = Window:NewTab("CrossHair")
local CrosshairSettings = CrossHair:NewSection("Crosshair Settings")

local function API_Check()
    if Drawing == nil then
        return "No"
    else
        return "Yes"
    end
end

local Find_Required = API_Check()

if Find_Required == "No" then
    game:GetService("StarterGui"):SetCore("SendNotification",{
        Title = "Exunys Developer";
        Text = "Crosshair script could not be loaded because your exploit is unsupported.";
        Duration = math.huge;
        Button1 = "OK"
    })

    return
end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local Camera = workspace.CurrentCamera

local Typing = false

local ViewportSize_ = Camera.ViewportSize / 2
local Axis_X, Axis_Y = ViewportSize_.X, ViewportSize_.Y

local HorizontalLine = Drawing.new("Line")
local VerticalLine = Drawing.new("Line")

local SendNotifications = true   -- If set to true then the script would notify you frequently on any changes applied and when loaded / errored. (If a game can detect this, it is recommended to set it to false)
local DefaultSettings = false   -- If set to true then the script would create a crosshair with the default settings regardless of any changes.
local ToMouse = false   -- If set to true then the crosshair will be positioned to your mouse cursor's position. If set to false it will be positioned to the center of your screen.

_G.CrosshairVisible = false   -- If set to true then the crosshair would be visible and vice versa.
_G.CrosshairSize = 20   -- The size of the crosshair.
local CrosshairThickness = 2   -- The thickness of the crosshair.
_G.CrosshairColor = Color3.fromRGB(0, 255, 0)   -- The color of the crosshair
local CrosshairTransparency = 1   -- The transparency of the crosshair.

local DisableKey = Enum.KeyCode.Q   -- The key that enables / disables the crosshair.

RunService.RenderStepped:Connect(function()
    local Real_Size = _G.CrosshairSize / 2

    HorizontalLine.Color = _G.CrosshairColor
    HorizontalLine.Thickness = CrosshairThickness
    HorizontalLine.Visible = _G.CrosshairVisible
    HorizontalLine.Transparency = CrosshairTransparency
    
    VerticalLine.Color = _G.CrosshairColor
    VerticalLine.Thickness = CrosshairThickness
    VerticalLine.Visible = _G.CrosshairVisible
    VerticalLine.Transparency = CrosshairTransparency
    
    if ToMouse == true then
        HorizontalLine.From = Vector2.new(UserInputService:GetMouseLocation().X - Real_Size, UserInputService:GetMouseLocation().Y)
        HorizontalLine.To = Vector2.new(UserInputService:GetMouseLocation().X + Real_Size, UserInputService:GetMouseLocation().Y)
        
        VerticalLine.From = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y - Real_Size)
        VerticalLine.To = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y + Real_Size)
    elseif ToMouse == false then
        HorizontalLine.From = Vector2.new(Axis_X - Real_Size, Axis_Y)
        HorizontalLine.To = Vector2.new(Axis_X + Real_Size, Axis_Y)
    
        VerticalLine.From = Vector2.new(Axis_X, Axis_Y - Real_Size)
        VerticalLine.To = Vector2.new(Axis_X, Axis_Y + Real_Size)
    end
end)

if DefaultSettings == true then
    _G.CrosshairVisible = true
    _G.CrosshairSize = 25
    CrosshairThickness = 1
    _G.CrosshairColor = Color3.fromRGB(40, 90, 255)
    CrosshairTransparency = 0.15
    DisableKey = Enum.KeyCode.Q
end

UserInputService.TextBoxFocused:Connect(function()
    Typing = true
end)

UserInputService.TextBoxFocusReleased:Connect(function()
    Typing = false
end)

UserInputService.InputBegan:Connect(function(Input)
    if Input.KeyCode == DisableKey and Typing == false then
        _G.CrosshairVisible = not _G.CrosshairVisible
        
        if SendNotifications == true then
            game:GetService("StarterGui"):SetCore("SendNotification",{
                Title = "Operation Nexus";
                Text = "The crosshair's visibility is now set to "..tostring(_G.CrosshairVisible)..".";
                Duration = 5;
            })
        end
    end
end)

CrosshairSettings:NewToggle("Enable Crosshair", "Or just press Q", function(state)
    _G.CrosshairVisible = state
end)

CrosshairSettings:NewSlider("Crosshair Size", "Changes the size of the Crosshair", 200, 0, function(s)
    _G.CrosshairSize = s
end)

CrosshairSettings:NewColorPicker("Crosshair Color", "Changes the color of the crosshair", Color3.fromRGB(0, 0, 0), function(color)
    _G.CrosshairColor = color
end)

local character = Window:NewTab("Character")
local movementSection = character:NewSection("Movement (UNSAFE)")

movementSection:NewSlider("Walk Speed Slider", "Speed", 500, 0, function(s)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

movementSection:NewSlider("Jump power Slider", "Jump", 500, 0, function(s)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)

local Other = Window:NewTab("Other Scripts")
local OthersSection = Other:NewSection("Scripts")

OthersSection:NewButton("Inf Yield", "In Case You Need It.", function()
        loadstring(game:HttpGet(("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/Inf%20Yeild"),true))()
end)

OthersSection:NewButton("Dark Dex", "In Case You Need It.", function()
        loadstring(game:HttpGet(("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/DarkDex"),true))()
end)

OthersSection:NewButton("Simply Spy", "In Case You Need It.", function()
        loadstring(game:HttpGet(("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/Remote%20Spy"),true))()
end)
-- 1.6.2
