local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/UILibrary.lua"))()
local Window = Library.CreateLib("卐 Operation Nexus Seig Heil 卍", "DarkTheme")

local ESPSection, AimbotTogglesSection, FOVTogglesSection, CrosshairSettings, MovementSection, OthersSection

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- Function to create a highlight for a character
local function createHighlight(character, highlightColor)
    if character and not character:FindFirstChild("HumanoidRootPart"):FindFirstChild("Highlight") then
        local highlightClone = Instance.new("Highlight")
        highlightClone.Name = "Highlight"
        highlightClone.Adornee = character.HumanoidRootPart
        highlightClone.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
        highlightClone.Color3 = highlightColor
        highlightClone.Parent = character.HumanoidRootPart
    end
end

-- Function to update player labels
local function updatePlayerLabels()
    local playerPosition = LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart.Position
    if not playerPosition then return end

    for _, otherPlayer in ipairs(Players:GetPlayers()) do
        if otherPlayer ~= LocalPlayer then
            local character = otherPlayer.Character
            local humanoid = character and character:FindFirstChild("Humanoid")
            local head = character and character:FindFirstChild("Head")

            if humanoid and head and humanoid.Health > 0 then
                local distance = (head.Position - LocalPlayer.Character.Head.Position).Magnitude

                local nameLabel = head:FindFirstChild("PlayerLabel") or Instance.new("BillboardGui")
                nameLabel.Name = "PlayerLabel"
                nameLabel.AlwaysOnTop = true
                nameLabel.ExtentsOffset = Vector3.new(0, 3, 0)
                nameLabel.Size = UDim2.new(0, 100, 0, 30)

                local nameLabelText = nameLabel:FindFirstChild("NameLabel") or Instance.new("TextLabel")
                nameLabelText.Name = "NameLabel"
                nameLabelText.BackgroundTransparency = 1
                nameLabelText.Position = UDim2.new(0, 0, 0, 0)
                nameLabelText.Size = UDim2.new(1, 0, 0.5, 0)
                nameLabelText.Text = otherPlayer.Name
                nameLabelText.TextColor3 = otherPlayer.TeamColor == LocalPlayer.TeamColor and Color3.new(0, 1, 0) or Color3.new(1, 0, 0)
                nameLabelText.Font = Enum.Font.SourceSansBold
                nameLabelText.TextSize = 18
                nameLabelText.Parent = nameLabel

                local healthLabelText = nameLabel:FindFirstChild("HealthLabel") or Instance.new("TextLabel")
                healthLabelText.Name = "HealthLabel"
                healthLabelText.BackgroundTransparency = 1
                healthLabelText.Position = UDim2.new(0, 0, 0.5, 0)
                healthLabelText.Size = UDim2.new(1, 0, 0.5, 0)
                healthLabelText.Text = string.format("Distance: %.2f | Health: %d", distance, humanoid.Health)
                healthLabelText.TextColor3 = Color3.new(1, 1, 1)
                healthLabelText.Font = Enum.Font.SourceSansBold
                healthLabelText.TextSize = 18
                healthLabelText.Parent = nameLabel

                nameLabel.Parent = head

                createHighlight(character, otherPlayer.TeamColor == LocalPlayer.TeamColor and Color3.new(0, 1, 0) or Color3.new(1, 0, 0))
            elseif head then
                local nameLabel = head:FindFirstChild("PlayerLabel")
                if nameLabel then
                    nameLabel:Destroy()
                end
            end
        end
    end
end

-- Function to create tracers for players
local function createTracers()
    local tracers = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local tracer = Drawing.new("Line")
            tracer.Visible = false
            tracer.Color = Color3.new(255, 0, 0)
            tracer.Thickness = 1
            tracer.Transparency = 1
            tracers[player] = tracer
        end
    end
    return tracers
end

-- Function to update tracers
local function updateTracers(tracers)
    local lplr = LocalPlayer
    local camera = Camera

    while true do
        for player, tracer in pairs(tracers) do
            if player.Character and player.Character:FindFirstChild("Humanoid") and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.Humanoid.Health > 0 then
                local Vector, OnScreen = camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
                if OnScreen then
                    tracer.From = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 1)
                    tracer.To = Vector2.new(Vector.X, Vector.Y)
                    tracer.Visible = player.TeamColor ~= lplr.TeamColor
                else
                    tracer.Visible = false
                end
            else
                tracer.Visible = false
            end
        end
        RunService.RenderStepped:Wait()
    end
end

-- Function to get the closest player
local function getClosestPlayer()
    local maximumDistance = 80
    local target = nil
    local closestDistance = math.huge
    local centerScreen = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)

    for _, v in ipairs(Players:GetPlayers()) do
        if v ~= LocalPlayer and (not _G.TeamCheck or v.Team ~= LocalPlayer.Team) then
            local character = v.Character
            if character then
                local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
                if humanoidRootPart and humanoidRootPart:IsDescendantOf(workspace) then
                    local screenPoint = Camera:WorldToScreenPoint(humanoidRootPart.Position)
                    local vectorDistance = (centerScreen - Vector2.new(screenPoint.X, screenPoint.Y)).Magnitude
                    if vectorDistance < maximumDistance and vectorDistance < closestDistance then
                        closestDistance = vectorDistance
                        target = v
                    end
                end
            end
        end
    end
    return target
end

-- Function to update crosshair position
local function updateCrosshairPosition()
    while true do
        local Real_Size = _G.CrosshairSize / 2
        local Axis_X, Axis_Y = Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2

        HorizontalLine.From = Vector2.new(Axis_X - Real_Size, Axis_Y)
        HorizontalLine.To = Vector2.new(Axis_X + Real_Size, Axis_Y)
    
        VerticalLine.From = Vector2.new(Axis_X, Axis_Y - Real_Size)
        VerticalLine.To = Vector2.new(Axis_X, Axis_Y + Real_Size)
        RunService.RenderStepped:Wait()
    end
end

-- Create ESP tab
local ESP = Window:NewTab("ESP")
ESPSection = ESP:NewSection("ESP")

-- Create ESP button
ESPSection:NewButton("ESP", "Shows enemy player chams, health, name, and distance from you.", function()
    _G.TeamCheck = true
    game.Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function()
            updatePlayerLabels()
        end)
    end)
    game.Players.PlayerRemoving:Connect(function(player)
        local character = player.Character
        if character then
            local highlight = character:FindFirstChild("Highlight")
            if highlight then
                highlight:Destroy()
            end
        end
    end)
    RunService.RenderStepped:Connect(function()
        updatePlayerLabels()
    end)
end)

-- Create FullBright button
ESPSection:NewButton("FullBright", "Night time is supposed to be dark?", function()
    local Lighting = game:GetService("Lighting")
    Lighting.Ambient = Color3.new(1, 1, 1)
    Lighting.OutdoorAmbient = Color3.new(1, 1, 1)
end)

-- Create Add Tracers button
ESPSection:NewButton("Add Tracers", "Adds tracers to other players", function()
    _G.Tracers = true
    local tracers = createTracers()
    updateTracers(tracers)
end)

-- Create Toggle Tracers toggle
ESPSection:NewToggle("Toggle Tracers", "Lines going to other players", function(state)
    _G.Tracers = state
end)

-- Create Aimbot tab
local Aimbot = Window:NewTab("Aimbot")
AimbotTogglesSection = Aimbot:NewSection("Aimbot Toggles")

-- Create Enable Aimbot toggle
AimbotTogglesSection:NewToggle("Enable Aimbot", "Enables Aimbot", function(state)
    _G.AimbotEnabled = state
end)

-- Create Enable Team Check toggle
AimbotTogglesSection:NewToggle("Enable Team Check", "Enables Team Check", function(state)
    _G.TeamCheck = state
end)

-- Create FOV Toggles section
FOVTogglesSection = Aimbot:NewSection("FOV Toggles")

-- Create FOV Visible toggle
FOVTogglesSection:NewToggle("FOV Visible", "Changes the visibility of the FOV.", function(state)
    _G.CircleVisible = state
end)

-- Create FOV Color picker
FOVTogglesSection:NewColorPicker("FOV Color", "Changes The FOV Color", Color3.fromRGB(0, 0, 0), function(color)
    _G.CircleColor = color
end)

-- Create FOV Size slider
FOVTogglesSection:NewSlider("FOV Size", "Changes the size of the FOV.", 500, 0, function(s)
    _G.CircleRadius = s
end)

-- Create Lock Speed slider
FOVTogglesSection:NewSlider("Lock Speed", "The Higher The number the lower the speed", 10, 0, function(s)
    _G.Sensitivity = s
end)

-- Create Crosshair tab
local CrossHair = Window:NewTab("CrossHair")
CrosshairSettings = CrossHair:NewSection("Crosshair Settings")

-- Create Enable Crosshair toggle
CrosshairSettings:NewToggle("Enable Crosshair", "Or just press Q", function(state)
    _G.CrosshairVisible = state
end)

-- Create Crosshair Size slider
CrosshairSettings:NewSlider("Crosshair Size", "Changes the size of the Crosshair", 200, 0, function(s)
    _G.CrosshairSize = s
end)

-- Create Crosshair Color picker
CrosshairSettings:NewColorPicker("Crosshair Color", "Changes the color of the crosshair", Color3.fromRGB(0, 0, 0), function(color)
    _G.CrosshairColor = color
end)

-- Create Character tab
local character = Window:NewTab("Character")
MovementSection = character:NewSection("Movement (UNSAFE)")

-- Create Walk Speed Slider slider
MovementSection:NewSlider("Walk Speed Slider", "Speed", 500, 0, function(s)
    LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

-- Create Jump power Slider slider
MovementSection:NewSlider("Jump power Slider", "Jump", 500, 0, function(s)
    LocalPlayer.Character.Humanoid.JumpPower = s
end)

-- Create Other Scripts tab
local Other = Window:NewTab("Other Scripts")
OthersSection = Other:NewSection("Scripts")

-- Create Inf Yield button
OthersSection:NewButton("Inf Yield", "In Case You Need It.", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/Inf%20Yeild", true))()
end)

-- Create Dark Dex button
OthersSection:NewButton("Dark Dex", "In Case You Need It.", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/DarkDex", true))()
end)

-- Create Simply Spy button
OthersSection:NewButton("Simply Spy", "In Case You Need It.", function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/PhantomLord157/ProjectBullShit/main/Remote%20Spy", true))()
end)

-- Start updating crosshair position
coroutine.wrap(updateCrosshairPosition)()
