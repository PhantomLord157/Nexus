-- Create and initialize the UI library
local Library = {}
local TweenService = game:GetService("TweenService")
local InputService = game:GetService("UserInputService")
local RenderStepped = game:GetService("RunService").RenderStepped
local Players = game:GetService("Players")
local ScreenGui = Instance.new("ScreenGui")
local Outer = Instance.new("Frame")
local Config = {
    TabPadding = 8,
    MenuFadeTime = 0.5,
    AutoShow = true
}

-- Helper function for safe creation of UI elements
local function createUIElement(className, properties)
    local success, element = pcall(function()
        local newElement = Instance.new(className)
        for prop, value in pairs(properties) do
            newElement[prop] = value
        end
        return newElement
    end)
    if not success then
        warn("Error creating UI element:", className, properties)
    end
    return element
end

-- Library function to create a UI element
function Library:Create(className, properties)
    return createUIElement(className, properties)
end

-- Library function to add elements to the registry
function Library:AddToRegistry(element, properties)
    -- Implement registration logic here
end

-- Function to create a window
function Library:CreateWindow()
    local Window = {}
    Window.Tabs = {}

    -- Main section creation
    local MainSectionOuter = Library:Create('Frame', {
        BackgroundColor3 = Library.BackgroundColor;
        BorderColor3 = Library.OutlineColor;
        Position = UDim2.new(0, 8, 0, 25);
        Size = UDim2.new(1, -16, 1, -33);
        ZIndex = 1;
        Parent = Outer;
    })

    Library:AddToRegistry(MainSectionOuter, {
        BackgroundColor3 = 'BackgroundColor';
        BorderColor3 = 'OutlineColor';
    })

    local MainSectionInner = Library:Create('Frame', {
        BackgroundColor3 = Library.BackgroundColor;
        BorderColor3 = Color3.new(0, 0, 0);
        BorderMode = Enum.BorderMode.Inset;
        Position = UDim2.new(0, 0, 0, 0);
        Size = UDim2.new(1, 0, 1, 0);
        ZIndex = 1;
        Parent = MainSectionOuter;
    })

    Library:AddToRegistry(MainSectionInner, {
        BackgroundColor3 = 'BackgroundColor';
    })

    local TabArea = Library:Create('Frame', {
        BackgroundTransparency = 1;
        Position = UDim2.new(0, 8, 0, 8);
        Size = UDim2.new(1, -16, 0, 21);
        ZIndex = 1;
        Parent = MainSectionInner;
    })

    local TabListLayout = Library:Create('UIListLayout', {
        Padding = UDim.new(0, Config.TabPadding);
        FillDirection = Enum.FillDirection.Horizontal;
        HorizontalAlignment = Enum.HorizontalAlignment.Center;
        SortOrder = Enum.SortOrder.LayoutOrder;
        Parent = TabArea;
    })

    local TabContainer = Library:Create('ImageLabel', {
        BackgroundColor3 = Library.MainColor;
        BorderColor3 = Library.OutlineColor;
        Image = nil;
        Position = UDim2.new(0, 8, 0, 30);
        Size = UDim2.new(1, -16, 1, -38);
        ZIndex = 2;
        Parent = MainSectionInner;
    })

    Library:AddToRegistry(TabContainer, {
        BackgroundColor3 = 'MainColor';
        BorderColor3 = 'OutlineColor';
    })

    -- Function to set the window title
    function Window:SetWindowTitle(Title)
        WindowLabel.Text = Title
    end

    -- Function to add a new tab
    function Window:AddTab(Name)
        local Tab = {
            Groupboxes = {};
            Tabboxes = {};
        }

        local TabButtonWidth = Library:GetTextBounds(Name, Library.Font, 16)

        local TabButton = Library:Create('Frame', {
            BackgroundColor3 = Library.BackgroundColor;
            BorderColor3 = Library.OutlineColor;
            Size = UDim2.new(0, TabButtonWidth + 8 + 4, 1, 0);
            ZIndex = 1;
            Parent = TabArea;
        })

        Library:AddToRegistry(TabButton, {
            BackgroundColor3 = 'BackgroundColor';
            BorderColor3 = 'OutlineColor';
        })

        local TabButtonLabel = Library:Create('TextLabel', {
            Position = UDim2.new(0, 0, 0, 0);
            Size = UDim2.new(1, 0, 1, -1);
            Text = Name;
            ZIndex = 1;
            Parent = TabButton;
        })

        local Blocker = Library:Create('Frame', {
            BackgroundColor3 = Library.MainColor;
            BorderSizePixel = 0;
            Position = UDim2.new(0, 0, 1, 0);
            Size = UDim2.new(1, 0, 0, 1);
            BackgroundTransparency = 1;
            ZIndex = 3;
            Parent = TabButton;
        })

        Library:AddToRegistry(Blocker, {
            BackgroundColor3 = 'MainColor';
        })

        local TabFrame = Library:Create('Frame', {
            Name = 'TabFrame';
            BackgroundTransparency = 1;
            Position = UDim2.new(0, 0, 0, 0);
            Size = UDim2.new(1, 0, 1, 0);
            Visible = false;
            ZIndex = 2;
            Parent = TabContainer;
        })

        local LeftSide = Library:Create('ScrollingFrame', {
            BackgroundTransparency = 1;
            BorderSizePixel = 0;
            Position = UDim2.new(0, 8 - 1, 0, 8 - 1);
            Size = UDim2.new(0.5, -12 + 2, 0, 507 + 2);
            CanvasSize = UDim2.new(0, 0, 0, 0);
            BottomImage = '';
            TopImage = '';
            ScrollBarThickness = 0;
            ZIndex = 2;
            Parent = TabFrame;
        })

        local RightSide = Library:Create('ScrollingFrame', {
            BackgroundTransparency = 1;
            BorderSizePixel = 0;
            Position = UDim2.new(0.5, 4 + 1, 0, 8 - 1);
            Size = UDim2.new(0.5, -12 + 2, 0, 507 + 2);
            CanvasSize = UDim2.new(0, 0, 0, 0);
            BottomImage = '';
            TopImage = '';
            ScrollBarThickness = 0;
            ZIndex = 2;
            Parent = TabFrame;
        })

        Library:Create('UIListLayout', {
            Padding = UDim.new(0, 8);
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            HorizontalAlignment = Enum.HorizontalAlignment.Center;
            Parent = LeftSide;
        })

        Library:Create('UIListLayout', {
            Padding = UDim.new(0, 8);
            FillDirection = Enum.FillDirection.Vertical;
            SortOrder = Enum.SortOrder.LayoutOrder;
            HorizontalAlignment = Enum.HorizontalAlignment.Center;
            Parent = RightSide;
        })

        -- Resize the canvas based on the content size
        for _, Side in pairs({ LeftSide, RightSide }) do
            Side:WaitForChild('UIListLayout'):GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
                Side.CanvasSize = UDim2.fromOffset(0, Side.UIListLayout.AbsoluteContentSize.Y)
            end)
        end

        -- Function to show the selected tab
        function Tab:ShowTab()
            for _, tab in pairs(Window.Tabs) do
                tab:HideTab()
            end

            Blocker.BackgroundTransparency = 0
            TabButton.BackgroundColor3 = Library.MainColor
            Library.RegistryMap[TabButton].Properties.BackgroundColor3 = 'MainColor'
            TabFrame.Visible = true
        end

        -- Function to hide the selected tab
        function Tab:HideTab()
            Blocker.BackgroundTransparency = 1
            TabButton.BackgroundColor3 = Library.BackgroundColor
            Library.RegistryMap[TabButton].Properties.BackgroundColor3 = 'BackgroundColor'
            TabFrame.Visible = false
        end

        -- Function to set the layout order of the tab button
        function Tab:SetLayoutOrder(Position)
            TabButton.LayoutOrder = Position
            TabListLayout:ApplyLayout()
        end

        -- Function to add a groupbox to the tab
        function Tab:AddGroupbox(Info)
            local Groupbox = {}

            local BoxOuter = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Library.OutlineColor;
                BackgroundTransparency = 0.5;
                BorderMode = Enum.BorderMode.Inset;
                Size = UDim2.new(1, 0, 0, 507 + 2);
                ZIndex = 2;
                Parent = Info.Side == 1 and LeftSide or RightSide;
            })

            Library:AddToRegistry(BoxOuter, {
                BackgroundColor3 = 'BackgroundColor';
                BorderColor3 = 'OutlineColor';
            })

            local BoxInner = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Library.OutlineColor;
                BorderSizePixel = 0;
                Position = UDim2.new(0, 1, 0, 1);
                Size = UDim2.new(1, -2, 1, -2);
                ZIndex = 2;
                Parent = BoxOuter;
            })

            Library:AddToRegistry(BoxInner, {
                BackgroundColor3 = 'BackgroundColor';
                BorderColor3 = 'OutlineColor';
            })

            local BoxHeader = Library:Create('Frame', {
                BackgroundColor3 = Library.MainColor;
                BorderSizePixel = 0;
                Size = UDim2.new(1, 0, 0, 24);
                ZIndex = 2;
                Parent = BoxOuter;
            })

            Library:AddToRegistry(BoxHeader, {
                BackgroundColor3 = 'MainColor';
            })

            local HeaderLabel = Library:Create('TextLabel', {
                BackgroundTransparency = 1;
                Position = UDim2.new(0, 8, 0, 0);
                Size = UDim2.new(1, -8, 1, 0);
                Text = Info.Name;
                ZIndex = 3;
                Parent = BoxHeader;
            })

            -- Add functionality to add elements to the groupbox
            function Groupbox:AddButton(ButtonInfo)
                -- Implement adding a button to the groupbox
            end

            function Groupbox:AddSlider(SliderInfo)
                -- Implement adding a slider to the groupbox
            end

            function Groupbox:AddColorPicker(PickerInfo)
                -- Implement adding a color picker to the groupbox
            end

            return Groupbox
        end

        -- Function to add a tabbox to the tab
        function Tab:AddTabbox(Info)
            local Tabbox = {}

            local TabboxContainer = Library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 1, 0);
                ZIndex = 2;
                Parent = TabFrame;
            })

            local TabboxTabArea = Library:Create('Frame', {
                BackgroundTransparency = 1;
                Size = UDim2.new(1, 0, 0, 30);
                ZIndex = 2;
                Parent = TabboxContainer;
            })

            local TabboxTabListLayout = Library:Create('UIListLayout', {
                Padding = UDim.new(0, Config.TabPadding);
                FillDirection = Enum.FillDirection.Horizontal;
                HorizontalAlignment = Enum.HorizontalAlignment.Center;
                SortOrder = Enum.SortOrder.LayoutOrder;
                Parent = TabboxTabArea;
            })

            local TabboxTabContainer = Library:Create('Frame', {
                BackgroundColor3 = Library.BackgroundColor;
                BorderColor3 = Library.OutlineColor;
                Position = UDim2.new(0, 0, 0, 30);
                Size = UDim2.new(1, 0, 1, -30);
                ZIndex = 2;
                Parent = TabboxContainer;
            })

            Library:AddToRegistry(TabboxTabContainer, {
                BackgroundColor3 = 'BackgroundColor';
                BorderColor3 = 'OutlineColor';
            })

            -- Function to add a new tab within the tabbox
            function Tabbox:AddTab(Name)
                local Tab = {
                    Groupboxes = {};
                    Tabboxes = {};
                }

                local TabButtonWidth = Library:GetTextBounds(Name, Library.Font, 16)

                local TabButton = Library:Create('Frame', {
                    BackgroundColor3 = Library.BackgroundColor;
                    BorderColor3 = Library.OutlineColor;
                    Size = UDim2.new(0, TabButtonWidth + 8 + 4, 1, 0);
                    ZIndex = 1;
                    Parent = TabboxTabArea;
                })

                Library:AddToRegistry(TabButton, {
                    BackgroundColor3 = 'BackgroundColor';
                    BorderColor3 = 'OutlineColor';
                })

                local TabButtonLabel = Library:Create('TextLabel', {
                    Position = UDim2.new(0, 0, 0, 0);
                    Size = UDim2.new(1, 0, 1, -1);
                    Text = Name;
                    ZIndex = 1;
                    Parent = TabButton;
                })

                local Blocker = Library:Create('Frame', {
                    BackgroundColor3 = Library.MainColor;
                    BorderSizePixel = 0;
                    Position = UDim2.new(0, 0, 1, 0);
                    Size = UDim2.new(1, 0, 0, 1);
                    BackgroundTransparency = 1;
                    ZIndex = 3;
                    Parent = TabButton;
                })

                Library:AddToRegistry(Blocker, {
                    BackgroundColor3 = 'MainColor';
                })

                local TabFrame = Library:Create('Frame', {
                    Name = 'TabFrame';
                    BackgroundTransparency = 1;
                    Position = UDim2.new(0, 0, 0, 0);
                    Size = UDim2.new(1, 0, 1, 0);
                    Visible = false;
                    ZIndex = 2;
                    Parent = TabboxTabContainer;
                })

                local LeftSide = Library:Create('ScrollingFrame', {
                    BackgroundTransparency = 1;
                    BorderSizePixel = 0;
                    Position = UDim2.new(0, 8 - 1, 0, 8 - 1);
                    Size = UDim2.new(0.5, -12 + 2, 0, 507 + 2);
                    CanvasSize = UDim2.new(0, 0, 0, 0);
                    BottomImage = '';
                    TopImage = '';
                    ScrollBarThickness = 0;
                    ZIndex = 2;
                    Parent = TabFrame;
                })

                local RightSide = Library:Create('ScrollingFrame', {
                    BackgroundTransparency = 1;
                    BorderSizePixel = 0;
                    Position = UDim2.new(0.5, 4 + 1, 0, 8 - 1);
                    Size = UDim2.new(0.5, -12 + 2, 0, 507 + 2);
                    CanvasSize = UDim2.new(0, 0, 0, 0);
                    BottomImage = '';
                    TopImage = '';
                    ScrollBarThickness = 0;
                    ZIndex = 2;
                    Parent = TabFrame;
                })

                Library:Create('UIListLayout', {
                    Padding = UDim.new(0, 8);
                    FillDirection = Enum.FillDirection.Vertical;
                    SortOrder = Enum.SortOrder.LayoutOrder;
                    HorizontalAlignment = Enum.HorizontalAlignment.Center;
                    Parent = LeftSide;
                })

                Library:Create('UIListLayout', {
                    Padding = UDim.new(0, 8);
                    FillDirection = Enum.FillDirection.Vertical;
                    SortOrder = Enum.SortOrder.LayoutOrder;
                    HorizontalAlignment = Enum.HorizontalAlignment.Center;
                    Parent = RightSide;
                })

                -- Resize the canvas based on the content size
                for _, Side in pairs({ LeftSide, RightSide }) do
                    Side:WaitForChild('UIListLayout'):GetPropertyChangedSignal('AbsoluteContentSize'):Connect(function()
                        Side.CanvasSize = UDim2.fromOffset(0, Side.UIListLayout.AbsoluteContentSize.Y)
                    end)
                end

                -- Function to show the selected tab within the tabbox
                function Tab:ShowTab()
                    for _, tab in pairs(Tabbox.Tabs) do
                        tab:HideTab()
                    end

                    Blocker.BackgroundTransparency = 0
                    TabButton.BackgroundColor3 = Library.MainColor
                    Library.RegistryMap[TabButton].Properties.BackgroundColor3 = 'MainColor'
                    TabFrame.Visible = true
                end

                -- Function to hide the selected tab within the tabbox
                function Tab:HideTab()
                    Blocker.BackgroundTransparency = 1
                    TabButton.BackgroundColor3 = Library.BackgroundColor
                    Library.RegistryMap[TabButton].Properties.BackgroundColor3 = 'BackgroundColor'
                    TabFrame.Visible = false
                end

                -- Function to set the layout order of the tab button within the tabbox
                function Tab:SetLayoutOrder(Position)
                    TabButton.LayoutOrder = Position
                    TabboxTabListLayout:ApplyLayout()
                end

                -- Function to add a groupbox to the tabbox
                function Tab:AddGroupbox(Info)
                    local Groupbox = {}

                    local BoxOuter = Library:Create('Frame', {
                        BackgroundColor3 = Library.BackgroundColor;
                        BorderColor3 = Library.OutlineColor;
                        BackgroundTransparency = 0.5;
                        BorderMode = Enum.BorderMode.Inset;
                        Size = UDim2.new(1, 0, 0, 507 + 2);
                        ZIndex = 2;
                        Parent = Info.Side == 1 and LeftSide or RightSide;
                    })

                    Library:AddToRegistry(BoxOuter, {
                        BackgroundColor3 = 'BackgroundColor';
                        BorderColor3 = 'OutlineColor';
                    })

                    local BoxInner = Library:Create('Frame', {
                        BackgroundColor3 = Library.BackgroundColor;
                        BorderColor3 = Library.OutlineColor;
                        BorderSizePixel = 0;
                        Position = UDim2.new(0, 1, 0, 1);
                        Size = UDim2.new(1, -2, 1, -2);
                        ZIndex = 2;
                        Parent = BoxOuter;
                    })

                    Library:AddToRegistry(BoxInner, {
                        BackgroundColor3 = 'BackgroundColor';
                        BorderColor3 = 'OutlineColor';
                    })

                    local BoxHeader = Library:Create('Frame', {
                        BackgroundColor3 = Library.MainColor;
                        BorderSizePixel = 0;
                        Size = UDim2.new(1, 0, 0, 24);
                        ZIndex = 2;
                        Parent = BoxOuter;
                    })

                    Library:AddToRegistry(BoxHeader, {
                        BackgroundColor3 = 'MainColor';
                    })

                    local HeaderLabel = Library:Create('TextLabel', {
                        BackgroundTransparency = 1;
                        Position = UDim2.new(0, 8, 0, 0);
                        Size = UDim2.new(1, -8, 1, 0);
                        Text = Info.Name;
                        ZIndex = 3;
                        Parent = BoxHeader;
                    })

                    -- Add functionality to add elements to the groupbox
                    function Groupbox:AddButton(ButtonInfo)
                        -- Implement adding a button to the groupbox
                    end

                    function Groupbox:AddSlider(SliderInfo)
                        -- Implement adding a slider to the groupbox
                    end

                    function Groupbox:AddColorPicker(PickerInfo)
                        -- Implement adding a color picker to the groupbox
                    end

                    return Groupbox
                end

                return Tab
            end

            return Tabbox
        end

        return Tab
    end

    return Window
end

-- Function to initialize the library
function Library:Init()
    -- Create the outer frame
    Outer.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Outer.Size = UDim2.new(0, 600, 0, 500)
    Outer.Position = UDim2.new(0.5, -300, 0.5, -250)
    Outer.Parent = ScreenGui

    -- Apply tween animations for UI elements
    local Tween = TweenService:Create(Outer, TweenInfo.new(Config.MenuFadeTime), { BackgroundTransparency = 0.5 })
    Tween:Play()
end

-- Initialize the library
Library:Init()

return Library
